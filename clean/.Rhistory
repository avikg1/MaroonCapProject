"RelativeUnemp" = ue_deviation,
"ImpactFactorZ" = impact_factor_z,
"BaselinePBD" = mean_pbd,
"BaselineRR" = mean_rr
) %>%
mutate(
PBDxRDD = PBD * RDD,
PBDxDIDorRKD = PBD * DIDorRKD,
DIDorRKDxSE = DIDorRKD * SE,
RDDxSE = RDD * SE,
PBDxBaselinePBD = PBD * BaselinePBD,
RRxBaselinePBD = RR * BaselinePBD,
PBDxBaselineRR = PBD * BaselineRR,
RRxBaselineRR = RR * BaselineRR
)
#full covariates
full_covariates <- c("SE", "DIDorRKDxSE", "RDDxSE", "DIDorRKD", "RDD",
"AllAffected", "PBD", "RRxBaselinePBD", "RRxBaselineRR",
"PBDxBaselinePBD", "PBDxBaselineRR", "Admin",
"NonemploymentAsOutcome", "HazardModel",
"YearsTo2023", "RelativeUnemp",
"USA", "TaxWedge", "ImpactFactorZ", "PBDxRDD",
"PBDxDIDorRKD")
all_full <- covariates %>%
select("elasticity", all_of(full_covariates)) %>%
drop_na()
#partial_covariates
partial_covariates <- c("SE", "PBD", "AllAffected", "design_DID",
"RDD", "Admin", "NonemploymentAsOutcome",
"HazardModel", "YearsTo2023", "USA",
"TaxWedge", "RelativeUnemp", "ImpactFactorZ")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
RR_partial <- all_partial %>%
filter(PBD == 0) %>%
select(-PBD)
subsets <- c("all_full", "all_partial", "RR_partial", "PBD_partial")
for (subset in subsets) {
print(subset)
df <- get(subset)
#this line should not need to be here but temp bug fix
df <- data.frame(lapply(df, function(x) as.numeric(as.character(x))))
# Quick code to test
# BMS <- bms(df, mprior = "uniform", g = "UIP", user.int = F)
# snippet from Havranek http://meta-analysis.cz/skill/skill.do
BMS <- bms(df, burn = 1e5,iter = 3e5, g = "UIP", mprior = "uniform",
nmodel = 50000, mcmc = "bd", user.int = FALSE)
tex_path <- paste0(dir, "/output/analysis/BMA_", subset, "_coefficients.tex")
pdf_path <- paste0(dir, "/output/analysis/BMA_", subset, "_models.pdf")
sink(tex_path)
coef <- coef(BMS, order.by.pip = F, exact = T, include.constant = T)
table <- round(coef[,1:(ncol(coef)-2)], digits=3)
print(xtable(table,digits=3))
sink()
pdf(pdf_path)
image(BMS, yprop2pip = FALSE, order.by.pip = T, do.par = TRUE, do.grid = TRUE, do.axis = TRUE, cex.axis = 0.7)
dev.off()
#summary(BMS)
#plot(BMS)
}
#prediction stuff
#PBD_best_nonemp  <-   c(0,      0,             0,        0,          1,     1,             1,        26,           .5,                26,               .5,          1,                1,                    1,             0,             0,           1,    28.40886,          0)
#RR_best_nonemp   <-   c(0,      0,             0,        0,          1,     1,             1,        26,           .5,                0,                 0,          1,                1,                    1,             0,             0,           1,    28.40886,          0)
#PBD_best_claimed <-   c(0,      0,             0,        0,          1,     1,             1,        26,           .5,                26,               .5,          1,                0,                    1,             0,             0,           1,    28.40886,          0)
#RR_best_claimed  <-   c(0,      0,             0,        0,          1,     1,             1,        26,           .5,                0,                 0,          1,                0,                    1,             0,             0,           1,    28.40886,          0)
#predict(BMS, PBD_best_nonemp, se.fit=TRUE)
#predict(BMS, PBD_best_claimed, se.fit=TRUE)
#predict(BMS, RR_best_nonemp,  se.fit=TRUE)
#predict(BMS, RR_best_claimed,  se.fit=TRUE)
View(df_long)
rm(list = ls())
#change dir later
dir <- "~/repo/ui_pubbias/issue_017a_missing_unemp"
library(tidyr)
library(pacman)
library(dplyr)
library(magrittr)
library(BMS)
library(readr)
library(xtable)
library(stats)
# Load data
long_path <- paste0(dir, "/clean/clean_review_estimates_long.csv")
df_long <- read_csv(long_path)
# demean year
covariates <- df_long %>%
mutate(
years_until_2023 = 2023 - year,
design_RKD = case_when(
research_design == "RKD" ~ 1,
TRUE ~ 0
),
RR = case_when(
pbd_vs_rr == "PBD" ~ 0,
TRUE ~ 1
),
DIDorRKD = design_DID + design_RKD,
ue_measure_nonemp = as.numeric(ue_measure_nonemp)
) %>%
rename(
"SE" = se,
"PBD" = PBD_indicator,
"AllAffected" = all_affected,
"RDD" = design_RDD_RKD,
"Admin" = admin,
"NonemploymentAsOutcome" = ue_measure_nonemp,
"HazardModel" = hazard,
"YearsTo2023" = years_until_2023,
"USA" = us_country,
"TaxWedge" = country_tax_wedge,
"RelativeUnemp" = ue_deviation,
"ImpactFactorZ" = impact_factor_z,
"BaselinePBD" = mean_pbd,
"BaselineRR" = mean_rr
) %>%
mutate(
PBDxRDD = PBD * RDD,
PBDxDIDorRKD = PBD * DIDorRKD,
DIDorRKDxSE = DIDorRKD * SE,
RDDxSE = RDD * SE,
PBDxBaselinePBD = PBD * BaselinePBD,
RRxBaselinePBD = RR * BaselinePBD,
PBDxBaselineRR = PBD * BaselineRR,
RRxBaselineRR = RR * BaselineRR
)
#full covariates
full_covariates <- c("SE", "DIDorRKDxSE", "RDDxSE", "DIDorRKD", "RDD",
"AllAffected", "PBD", "RRxBaselinePBD", "RRxBaselineRR",
"PBDxBaselinePBD", "PBDxBaselineRR", "Admin",
"NonemploymentAsOutcome", "HazardModel",
"YearsTo2023", "RelativeUnemp",
"USA", "TaxWedge", "ImpactFactorZ", "PBDxRDD",
"PBDxDIDorRKD")
all_full <- covariates %>%
select("elasticity", all_of(full_covariates)) %>%
drop_na()
#partial_covariates
partial_covariates <- c("SE", "PBD", "AllAffected", "design_DID",
"RDD", "Admin", "NonemploymentAsOutcome",
"HazardModel", "YearsTo2023", "USA",
"TaxWedge", "RelativeUnemp", "ImpactFactorZ")
partial_covariates <- c("SE")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
#PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
#change dir later
dir <- "~/repo/ui_pubbias/issue_017a_missing_unemp"
library(tidyr)
library(pacman)
library(dplyr)
library(magrittr)
library(BMS)
library(readr)
library(xtable)
library(stats)
# Load data
long_path <- paste0(dir, "/clean/clean_review_estimates_long.csv")
df_long <- read_csv(long_path)
# demean year
covariates <- df_long %>%
mutate(
years_until_2023 = 2023 - year,
design_RKD = case_when(
research_design == "RKD" ~ 1,
TRUE ~ 0
),
RR = case_when(
pbd_vs_rr == "PBD" ~ 0,
TRUE ~ 1
),
DIDorRKD = design_DID + design_RKD,
ue_measure_nonemp = as.numeric(ue_measure_nonemp)
) %>%
rename(
"SE" = se,
"PBD" = PBD_indicator,
"AllAffected" = all_affected,
"RDD" = design_RDD_RKD,
"Admin" = admin,
"NonemploymentAsOutcome" = ue_measure_nonemp,
"HazardModel" = hazard,
"YearsTo2023" = years_until_2023,
"USA" = us_country,
"TaxWedge" = country_tax_wedge,
"RelativeUnemp" = ue_deviation,
"ImpactFactorZ" = impact_factor_z,
"BaselinePBD" = mean_pbd,
"BaselineRR" = mean_rr
) %>%
mutate(
PBDxRDD = PBD * RDD,
PBDxDIDorRKD = PBD * DIDorRKD,
DIDorRKDxSE = DIDorRKD * SE,
RDDxSE = RDD * SE,
PBDxBaselinePBD = PBD * BaselinePBD,
RRxBaselinePBD = RR * BaselinePBD,
PBDxBaselineRR = PBD * BaselineRR,
RRxBaselineRR = RR * BaselineRR
)
#full covariates
full_covariates <- c("SE", "DIDorRKDxSE", "RDDxSE", "DIDorRKD", "RDD",
"AllAffected", "PBD", "RRxBaselinePBD", "RRxBaselineRR",
"PBDxBaselinePBD", "PBDxBaselineRR", "Admin",
"NonemploymentAsOutcome", "HazardModel",
"YearsTo2023", "RelativeUnemp",
"USA", "TaxWedge", "ImpactFactorZ", "PBDxRDD",
"PBDxDIDorRKD")
all_full <- covariates %>%
select("elasticity", all_of(full_covariates)) %>%
drop_na()
#partial_covariates
partial_covariates <- c("SE", "PBD", "AllAffected", "design_DID",
"RDD", "Admin", "NonemploymentAsOutcome",
"HazardModel", "YearsTo2023", "USA",
"TaxWedge", "RelativeUnemp", "ImpactFactorZ")
partial_covariates <- c("SE")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
#PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
#change dir later
dir <- "~/repo/ui_pubbias/issue_017a_missing_unemp"
library(tidyr)
library(pacman)
library(dplyr)
library(magrittr)
library(BMS)
library(readr)
library(xtable)
library(stats)
# Load data
long_path <- paste0(dir, "/clean/clean_review_estimates_long.csv")
df_long <- read_csv(long_path)
# demean year
covariates <- df_long %>%
mutate(
years_until_2023 = 2023 - year,
design_RKD = case_when(
research_design == "RKD" ~ 1,
TRUE ~ 0
),
RR = case_when(
pbd_vs_rr == "PBD" ~ 0,
TRUE ~ 1
),
DIDorRKD = design_DID + design_RKD,
ue_measure_nonemp = as.numeric(ue_measure_nonemp)
) %>%
rename(
"SE" = se,
"PBD" = PBD_indicator,
"AllAffected" = all_affected,
"RDD" = design_RDD_RKD,
"Admin" = admin,
"NonemploymentAsOutcome" = ue_measure_nonemp,
"HazardModel" = hazard,
"YearsTo2023" = years_until_2023,
"USA" = us_country,
"TaxWedge" = country_tax_wedge,
"RelativeUnemp" = ue_deviation,
"ImpactFactorZ" = impact_factor_z,
"BaselinePBD" = mean_pbd,
"BaselineRR" = mean_rr
) %>%
mutate(
PBDxRDD = PBD * RDD,
PBDxDIDorRKD = PBD * DIDorRKD,
DIDorRKDxSE = DIDorRKD * SE,
RDDxSE = RDD * SE,
PBDxBaselinePBD = PBD * BaselinePBD,
RRxBaselinePBD = RR * BaselinePBD,
PBDxBaselineRR = PBD * BaselineRR,
RRxBaselineRR = RR * BaselineRR
)
#full covariates
full_covariates <- c("SE", "DIDorRKDxSE", "RDDxSE", "DIDorRKD", "RDD",
"AllAffected", "PBD", "RRxBaselinePBD", "RRxBaselineRR",
"PBDxBaselinePBD", "PBDxBaselineRR", "Admin",
"NonemploymentAsOutcome", "HazardModel",
"YearsTo2023", "RelativeUnemp",
"USA", "TaxWedge", "ImpactFactorZ", "PBDxRDD",
"PBDxDIDorRKD")
all_full <- covariates %>%
select("elasticity", all_of(full_covariates)) %>%
drop_na()
#partial_covariates
partial_covariates <- c("SE", "PBD", "AllAffected", "design_DID",
"RDD", "Admin", "NonemploymentAsOutcome",
"HazardModel", "YearsTo2023", "USA",
"TaxWedge", "RelativeUnemp", "ImpactFactorZ")
partial_covariates <- c("SE")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
#PBD_partial <- all_partial %>%
#  filter(PBD == 1) %>%
#  select(-PBD)
#RR_partial <- all_partial %>%
#  filter(PBD == 0) %>%
#  select(-PBD)
subsets <- c("all_full", "all_partial", "RR_partial", "PBD_partial")
for (subset in subsets) {
print(subset)
df <- get(subset)
#this line should not need to be here but temp bug fix
df <- data.frame(lapply(df, function(x) as.numeric(as.character(x))))
# Quick code to test
# BMS <- bms(df, mprior = "uniform", g = "UIP", user.int = F)
# snippet from Havranek http://meta-analysis.cz/skill/skill.do
BMS <- bms(df, burn = 1e5,iter = 3e5, g = "UIP", mprior = "uniform",
nmodel = 50000, mcmc = "bd", user.int = FALSE)
tex_path <- paste0(dir, "/output/analysis/BMA_", subset, "_coefficients.tex")
pdf_path <- paste0(dir, "/output/analysis/BMA_", subset, "_models.pdf")
sink(tex_path)
coef <- coef(BMS, order.by.pip = F, exact = T, include.constant = T)
table <- round(coef[,1:(ncol(coef)-2)], digits=3)
print(xtable(table,digits=3))
sink()
pdf(pdf_path)
image(BMS, yprop2pip = FALSE, order.by.pip = T, do.par = TRUE, do.grid = TRUE, do.axis = TRUE, cex.axis = 0.7)
dev.off()
#summary(BMS)
#plot(BMS)
}
partial_covariates <- c("SE", "PBD")
PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
partial_covariates <- c("SE", "PBD", "AllAffected", "design_DID",
"RDD", "Admin", "NonemploymentAsOutcome",
"HazardModel", "YearsTo2023", "USA",
"TaxWedge", "RelativeUnemp", "ImpactFactorZ")
partial_covariates <- c("SE", "PBD")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
RR_partial <- all_partial %>%
filter(PBD == 0) %>%
select(-PBD)
subsets <- c("all_full", "all_partial", "RR_partial", "PBD_partial")
subsets <- c("all_partial")
for (subset in subsets) {
print(subset)
df <- get(subset)
#this line should not need to be here but temp bug fix
df <- data.frame(lapply(df, function(x) as.numeric(as.character(x))))
# Quick code to test
# BMS <- bms(df, mprior = "uniform", g = "UIP", user.int = F)
# snippet from Havranek http://meta-analysis.cz/skill/skill.do
BMS <- bms(df, burn = 1e5,iter = 3e5, g = "UIP", mprior = "uniform",
nmodel = 50000, mcmc = "bd", user.int = FALSE)
tex_path <- paste0(dir, "/output/analysis/BMA_", subset, "_coefficients.tex")
pdf_path <- paste0(dir, "/output/analysis/BMA_", subset, "_models.pdf")
sink(tex_path)
coef <- coef(BMS, order.by.pip = F, exact = T, include.constant = T)
table <- round(coef[,1:(ncol(coef)-2)], digits=3)
print(xtable(table,digits=3))
sink()
pdf(pdf_path)
image(BMS, yprop2pip = FALSE, order.by.pip = T, do.par = TRUE, do.grid = TRUE, do.axis = TRUE, cex.axis = 0.7)
dev.off()
#summary(BMS)
#plot(BMS)
}
partial_covariates <- c("SE", "PBD", "AllAffected")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
RR_partial <- all_partial %>%
filter(PBD == 0) %>%
select(-PBD)
subsets <- c("all_full", "all_partial", "RR_partial", "PBD_partial")
subsets <- c("all_partial")
for (subset in subsets) {
print(subset)
df <- get(subset)
#this line should not need to be here but temp bug fix
df <- data.frame(lapply(df, function(x) as.numeric(as.character(x))))
# Quick code to test
# BMS <- bms(df, mprior = "uniform", g = "UIP", user.int = F)
# snippet from Havranek http://meta-analysis.cz/skill/skill.do
BMS <- bms(df, burn = 1e5,iter = 3e5, g = "UIP", mprior = "uniform",
nmodel = 50000, mcmc = "bd", user.int = FALSE)
tex_path <- paste0(dir, "/output/analysis/BMA_", subset, "_coefficients.tex")
pdf_path <- paste0(dir, "/output/analysis/BMA_", subset, "_models.pdf")
sink(tex_path)
coef <- coef(BMS, order.by.pip = F, exact = T, include.constant = T)
table <- round(coef[,1:(ncol(coef)-2)], digits=3)
print(xtable(table,digits=3))
sink()
pdf(pdf_path)
image(BMS, yprop2pip = FALSE, order.by.pip = T, do.par = TRUE, do.grid = TRUE, do.axis = TRUE, cex.axis = 0.7)
dev.off()
#summary(BMS)
#plot(BMS)
}
partial_covariates <- c("SE", "PBD", "AllAffected", "design_DID")
all_partial <- covariates %>%
select("elasticity", all_of(partial_covariates)) %>%
drop_na()
PBD_partial <- all_partial %>%
filter(PBD == 1) %>%
select(-PBD)
RR_partial <- all_partial %>%
filter(PBD == 0) %>%
select(-PBD)
subsets <- c("all_full", "all_partial", "RR_partial", "PBD_partial")
subsets <- c("all_partial")
for (subset in subsets) {
print(subset)
df <- get(subset)
#this line should not need to be here but temp bug fix
df <- data.frame(lapply(df, function(x) as.numeric(as.character(x))))
# Quick code to test
# BMS <- bms(df, mprior = "uniform", g = "UIP", user.int = F)
# snippet from Havranek http://meta-analysis.cz/skill/skill.do
BMS <- bms(df, burn = 1e5,iter = 3e5, g = "UIP", mprior = "uniform",
nmodel = 50000, mcmc = "bd", user.int = FALSE)
tex_path <- paste0(dir, "/output/analysis/BMA_", subset, "_coefficients.tex")
pdf_path <- paste0(dir, "/output/analysis/BMA_", subset, "_models.pdf")
sink(tex_path)
coef <- coef(BMS, order.by.pip = F, exact = T, include.constant = T)
table <- round(coef[,1:(ncol(coef)-2)], digits=3)
print(xtable(table,digits=3))
sink()
pdf(pdf_path)
image(BMS, yprop2pip = FALSE, order.by.pip = T, do.par = TRUE, do.grid = TRUE, do.axis = TRUE, cex.axis = 0.7)
dev.off()
#summary(BMS)
#plot(BMS)
}
library(ggplot2)
p1 <- ggplot(all_partial, aes(x = SE, y = elasticity)) + geom_point()
p1
View(all_partial)
p1
csv <- paste0(dir, "/clean/clean_review_estimates_long.csv")
dir <- "~/repo/ui_pubbias"
library(pacman)
library(RColorBrewer)
library(latex2exp)
library(xtable)
library(tidyverse)
library(readr)
csv <- paste0(dir, "/clean/clean_review_estimates_long.csv")
long_estimates <- read_csv(csv)
PBD <- long_estimates %>%
filter(long_estimates$pbd_vs_rr == "PBD")
RR  <- long_estimates %>%
filter(long_estimates$pbd_vs_rr == "RR")
X_PBD  <- as.matrix(PBD$main_elasticity_)
X_PBD  <- as.matrix(PBD$main_elasticity)
se_PBD <- as.matrix(PBD$main_se)
X_RR  <- as.matrix(RR$main_elasticity)
se_RR <- as.matrix(RR$main_se)
cluster_PBD <- as.matrix(PBD$reform_id)
cluster_RR  <- as.matrix(RR$reform_id)
names_PBD <- as.character(PBD$paper_name_long)
names_RR  <- as.character(RR$paper_name_long)
symmetric <- 0
cutoffs   <- c(0,1.96)
GMM <- paste0(dir, "/issue_024b_ak_file_move/PublicationbiasPackage.R")
source(GMM)
GMM <- paste0(dir, "/issue_24b_ak_file_move/PublicationbiasPackage.R")
source(GMM)
PublicationbiasGMM(X_RR,  se_RR,  cluster_RR,  symmetric, cutoffs, names_RR,  "RR")
GMM <- paste0(dir, "/issue_24b_ak_file_move/PublicationbiasPackage.R")
source(GMM)
PublicationbiasGMM(X_RR,  se_RR,  cluster_RR,  symmetric, cutoffs, names_RR,  "RR")
PublicationbiasGMM(X_RR,  se_RR,  cluster_RR,  symmetric, cutoffs, names_RR)
GMM <- paste0(dir, "/issue_24b_ak_file_move/PublicationbiasPackage.R")
source(GMM)
output_folder <- "~/repo/ui_pubbias/issue_24b_ak_file_move/output/"
PublicationbiasGMM(X_RR,  se_RR,  cluster_RR,  symmetric, cutoffs, names_RR, output_folder)
PublicationbiasGMM(X_RR,  se_RR,  cluster_RR,  symmetric, cutoffs, names_RR, output_folder)
GMM <- paste0(dir, "/issue_24b_ak_file_move/PublicationbiasPackage.R")
source(GMM)
output_folder_RR <- "~/repo/ui_pubbias/issue_24b_ak_file_move/output/RR/"
output_folder_PBD <- "~/repo/ui_pubbias/issue_24b_ak_file_move/output/PBD/"
PublicationbiasGMM(X_RR,  se_RR,  cluster_RR,  symmetric, cutoffs, names_RR, output_folder_RR)
setwd("~/repo/MaroonCapProject/clean")
df <- read_csv("BIGGERWIN.csv")
df <- read.csv("BIGGERWIN.csv")
View(df)
mean(df$HML)
mean(df$SMB)
nrows(df)
nrow(df)
setwd("~/repo/MaroonCapProject/clean")
df <- read.csv("BIGGERWIN.csv")
View(df)
mean(SMB)
mean(df$SMB)
mean(df$HML)
